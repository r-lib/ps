% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/disk.R
\name{ps_fs_info}
\alias{ps_fs_info}
\title{File system information for files}
\usage{
ps_fs_info(paths = "/")
}
\arguments{
\item{paths}{A path or a vector of paths. \code{ps_fs_info()} returns
information about the file systems of all paths. \code{path} may contain
direcories as well.}
}
\value{
Data frame with file system information for each
path in \code{paths}, one row per path. Common columns for all
operating systems:
\itemize{
\item \code{path}: The input paths, i.e. the \code{paths} argument.
\item \code{mount_point}: Directory where the file system is mounted.
On Linux there is a small chance that it was not possible to
look this up, and it is \code{NA_character_}.
\item \code{name}: Device name.
On Linux there is a small chance that it was not possible to
look this up, and it is \code{NA_character_}.
\item \code{type}: File system type (character).
On Linux there is a tiny chance that it was not possible to
look this up, and it is \code{NA_character_}.
\item \code{block_size}: File system block size.
\item \code{transfer_block_size}: Pptimal transfer block size. On Linux it is
currently always the same as \code{block_size}.
\item \code{total_data_blocks}: Total data blocks in file system.
\item \code{free_blocks}: Free blocks in file system.
\item \code{id}: File system id. This is a raw vector. On Linux it is
often all zeros.
\item \code{owner}: User that mounted the file system. On Linux this is
currently always \code{NA_character_}.
\item \code{type_code}: Type of file system, a numeric code.
\item \code{mount_flags_code}: Mount flags as a code.
\item \code{subtype_code}: File system subtype (flavor). On Linux this is
always \code{NA}.
}

The rest of the columns are flags, and they are operating system
dependent.

macOS:
\itemize{
\item \code{RDONLY}: A read-only filesystem.
\item \code{SYNCHRONOUS}: File system is written to synchronously.
\item \code{NOEXEC}: Can't exec from filesystem.
\item \code{NOSUID}: Setuid bits are not honored on this filesystem.
\item \code{NODEV}: Don't interpret special files.
\item \code{UNION}: Union with underlying filesysten.
\item \code{ASYNC}: File system written to asynchronously.
\item \code{EXPORTED}: File system is exported.
\item \code{LOCAL}: File system is stored locally.
\item \code{QUOTA}: Quotas are enabled on this file system.
\item \code{ROOTFS}: This file system is the root of the file system.
\item \code{DOVOLFS}: File system supports volfs.
\item \code{DONTBROWSE}: File system is not appropriate path to user data.
\item \code{UNKNOWNPERMISSIONS}:  VFS will ignore ownership information on
filesystem filesystemtem objects.
\item \code{AUTOMOUNTED}: File system was mounted by automounter.
\item \code{JOURNALED}: File system is journaled.
\item \code{DEFWRITE}: File system should defer writes.
\item \code{MULTILABEL}: MAC support for individual labels.
\item \code{CPROTECT}: File system supports per-file encrypted data protection.
}

Linux:
\itemize{
\item \code{MANDLOCK}: Mandatory locking is permitted on the filesystem
(see \code{fcntl(2)}).
\item \code{NOATIME}: Do not update access times; see \code{mount(2)}.
\item \code{NODEV}: Disallow access to device special files on this filesystem.
\item \code{NODIRATIME}: Do not update directory access times; see mount(2).
\item \code{NOEXEC}: Execution of programs is disallowed on this filesystem.
\item \code{NOSUID}: The set-user-ID and set-group-ID bits are ignored by
\code{exec(3)} for executable files on this filesystem
\item \code{RDONLY}: This filesystem is mounted read-only.
\item \code{RELATIME}: Update atime relative to mtime/ctime; see \code{mount(2)}.
\item \code{SYNCHRONOUS}: Writes are synched to the filesystem immediately
(see the description of \code{O_SYNC} in `open(2)``).
\item \code{NOSYMFOLLOW}: Symbolic links are not followed when resolving paths;
see `mount(2)``.
}
}
\description{
This function currently only works on Unix operating systems.
}
\examples{
\dontshow{if (ps::ps_is_supported() && ! ps:::ps_os_type()[["WINDOWS"]] && ! ps:::is_cran_check()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
ps_fs_info(c("/", "~", "."))
\dontshow{\}) # examplesIf}
}
